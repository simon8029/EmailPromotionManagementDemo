
 //------------------------------------------------------------------------------
// <auto-generated>
// 数据仓储接口，作用：
// 1.调用EF容器 批量 执行 sql语句
// 2.方便通过 子接口属性直接 获取 对应数据表的操作接口对象
// </auto-generated>
//------------------------------------------------------------------------------

namespace Simon8029.EMPDemo.Repository
{
    using System;
    using Simon8029.EMPDemo.IRepository;
    public partial class DbSession:IRepository.IDbSession
    {
    	IRepository.IEM_CampaignInstancesRepository _EM_CampaignInstancesRepository;
        public IRepository.IEM_CampaignInstancesRepository EM_CampaignInstancesRepository 
        { 
        	get
        	{
                if (_EM_CampaignInstancesRepository == null)
                    _EM_CampaignInstancesRepository = new EM_CampaignInstancesRepository();
                return _EM_CampaignInstancesRepository;
        	}
        }
    
    	IRepository.IEM_CampaignsRepository _EM_CampaignsRepository;
        public IRepository.IEM_CampaignsRepository EM_CampaignsRepository 
        { 
        	get
        	{
                if (_EM_CampaignsRepository == null)
                    _EM_CampaignsRepository = new EM_CampaignsRepository();
                return _EM_CampaignsRepository;
        	}
        }
    
    	IRepository.IEM_EmailInstancesRepository _EM_EmailInstancesRepository;
        public IRepository.IEM_EmailInstancesRepository EM_EmailInstancesRepository 
        { 
        	get
        	{
                if (_EM_EmailInstancesRepository == null)
                    _EM_EmailInstancesRepository = new EM_EmailInstancesRepository();
                return _EM_EmailInstancesRepository;
        	}
        }
    
    	IRepository.IEM_EmailTemplatesRepository _EM_EmailTemplatesRepository;
        public IRepository.IEM_EmailTemplatesRepository EM_EmailTemplatesRepository 
        { 
        	get
        	{
                if (_EM_EmailTemplatesRepository == null)
                    _EM_EmailTemplatesRepository = new EM_EmailTemplatesRepository();
                return _EM_EmailTemplatesRepository;
        	}
        }
    
    	IRepository.IEM_EmailTemplateTypesRepository _EM_EmailTemplateTypesRepository;
        public IRepository.IEM_EmailTemplateTypesRepository EM_EmailTemplateTypesRepository 
        { 
        	get
        	{
                if (_EM_EmailTemplateTypesRepository == null)
                    _EM_EmailTemplateTypesRepository = new EM_EmailTemplateTypesRepository();
                return _EM_EmailTemplateTypesRepository;
        	}
        }
    
    	IRepository.IEM_EventsRepository _EM_EventsRepository;
        public IRepository.IEM_EventsRepository EM_EventsRepository 
        { 
        	get
        	{
                if (_EM_EventsRepository == null)
                    _EM_EventsRepository = new EM_EventsRepository();
                return _EM_EventsRepository;
        	}
        }
    
    	IRepository.IEM_LeadsRepository _EM_LeadsRepository;
        public IRepository.IEM_LeadsRepository EM_LeadsRepository 
        { 
        	get
        	{
                if (_EM_LeadsRepository == null)
                    _EM_LeadsRepository = new EM_LeadsRepository();
                return _EM_LeadsRepository;
        	}
        }
    
    }
}
